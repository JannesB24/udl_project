[project]
name = "udl_project"
version = "0.1.0"
description = "A sample Python project"
authors = [
    { name="Jannes Bruns", email="jannbruns@uni-osna.de" },
    { name="Sören Kröger", email="sokroeger@uni-osnabrueck.de" },
    { name="Muhammad Abu Ahmad", email="mabuahmad@uni-osnabrueck.de"}
]
readme = "README.md"
requires-python = ">=3.11"
license = { text = "MIT" }

[project.urls]
Homepage = "https://github.com/JannesB24/udl_project"

[tool.ruff]
line-length = 100
target-version = "py312"

# List of typical rules created with AI
[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort (import sorting)
    "N",   # pep8-naming
    "D",   # pydocstyle
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "ICN", # flake8-import-conventions
    "PIE", # flake8-pie
    "PYI", # flake8-pyi
    "Q",   # flake8-quotes
    "RSE", # flake8-raise
    "RET", # flake8-return
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "ARG", # flake8-unused-arguments
    "PTH", # flake8-use-pathlib
    "ERA", # eradicate (commented-out code)
    "PL",  # pylint
    "TRY", # tryceratops
    "RUF", # ruff-specific rules
]

ignore = [
    "D100",  # Missing docstring in public module
    "D101",  # Missing docstring in public class
    "D102",  # Missing docstring in public method
    "D103",  # Missing docstring in public function
    "D104",  # Missing docstring in public package
    "D107",  # Missing docstring in __init__
    "E501",  # Line too long (handled by line-length setting)
    "TRY003", # Avoid specifying long messages outside the exception class
    "PLR0913", # Too many arguments to function call
    "PLR0912", # Too many branches
    "PLR0915", # Too many statements
    "TC001",
    "RET504",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
combine-as-imports = true
force-wrap-aliases = true
known-first-party = ["udl_project"]
